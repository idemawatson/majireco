generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Player {
  id             String         @id @unique @default(uuid())
  name           String
  ownGames       Game[]
  attendingGames PlayerOnGame[]
}

model Game {
  id               String         @id @unique @default(uuid())
  playedAt         DateTime       @default(now())
  rule             GameRule
  rate             GameRate
  started          Boolean        @default(false)
  completed        Boolean        @default(false)
  memo             String?
  owner            Player         @relation(fields:[ownerId], references: [id])
  ownerId          String      
  belongingPlayers PlayerOnGame[]
}

model PlayerOnGame {
  player       Player        @relation(fields: [playerId], references: [id])
  playerId     String
  game         Game          @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId       String
  roundRecords RoundRecord[]
  
  @@id([playerId, gameId])
}

model RoundRecord {
  id                   String       @id @unique @default(uuid())
  roundId              String
  createdAt            DateTime     @default(now())
  playerOnGame         PlayerOnGame @relation(references: [playerId, gameId], fields: [playerOnGamePlayerId, playerOnGameGameId], onDelete: Cascade)
  rank                 Int
  score                Int
  playerOnGamePlayerId String
  playerOnGameGameId   String
}

enum GameRule {
  RULE_1020
  RULE_1030
}

enum GameRate {
  NO_RATE
  PER_10
  PER_30
  PER_50
}
